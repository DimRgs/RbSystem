<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="system.mapper.UserMapper">
	<resultMap type="User" id="user_map">
		<id property="id" column="id" />
		<result property="password" column="password" />
		<result property="name" column="name" />
		<result property="idcard" column="id_card" />
		<result property="telephone" column="telephone" />
		<result property="register_date" column="register_time" />
		<result property="gender" column="gender" />
	</resultMap>
	<resultMap type="Admin" id="admin_map">
		<id property="id" column="id" />
		<result property="password" column="password" />
		<result property="level" column="level" />
	</resultMap>
	<resultMap type="RbDetail" id="rb_map">
		<id property="rb_id" column="id" />
		<result property="rb_state" column="rb_state_id" />
		<result property="hospital" column="hospital" />
		<result property="isUndo" column="is_undo" />
		<result property="date" column="s_time" />
		<association property="user" javaType="User">
			<id property="id" column="user_id" />
			<result property="name" column="u_name" />
		</association>
		<association property="admin" javaType="Admin">
			<id property="id" column="a_id" />
		</association>
	</resultMap>
	<resultMap type="Undo" id="undo_map">
		<id property="id" column="r_id" />
		<result property="rb_id" column="rb_id" />
		<result property="note1" column="note1" />
		<result property="note2" column="note2" />
		<result property="note3" column="note3" />
	</resultMap>
	<resultMap type="Referral" id="referral_map">
		<id property="id" column="r_id" />
		<result property="date" column="r_date" />
		<result property="pic" column="r_pic" />
	</resultMap>
	<resultMap type="Ghf" id="ghf_map">
		<id property="id" column="g_id" />
		<result property="date" column="g_date" />
		<result property="pic" column="g_pic" />
		<result property="department" column="g_department" />
		<result property="note" column="g_note" />
		<result property="cost" column="g_cost" />
		<result property="self_paid" column="g_self_paid" />
	</resultMap>
	<resultMap type="Wssm" id="wssm_map">
		<id property="id" column="r_id" />
		<result property="note" column="w_note" />
		<result property="stamp_pic" column="stamp_pic" />
		<result property="special_pic" column="special_pic" />
	</resultMap>
	<resultMap type="Yymx" id="yymx_map">
		<id property="id" column="y_id" />
		<result property="date" column="y_date" />
		<result property="note" column="y_note" />
		<result property="cost" column="y_cost" />
		<result property="self_paid" column="y_self_paid" />
		<result property="part_paid" column="g_part_paid" />
		<result property="special_paid" column="g_special_paid" />
		<result property="detailed_pic" column="detailed_pic" />
		<result property="pspt_pic" column="pspt_pic" />
	</resultMap>
	<resultMap type="RbDetail" id="rb_detail_map">
		<id property="rb_id" column="id" />
		<result property="rb_state" column="rb_state_id" />
		<result property="hospital" column="hospital" />
		<result property="isUndo" column="is_undo" />
		<result property="date" column="s_time" />
		<association property="user" javaType="User">
			<id property="id" column="user_id" />
			<result property="name" column="u_name" />
		</association>
		<association property="admin" javaType="Admin">
			<id property="id" column="a_id" />
		</association>
		<association property="referral" javaType="Referral">
			<id property="id" column="r_id" />
			<result property="date" column="r_date" />
			<result property="pic" column="r_pic" />
		</association>
		<association property="wssm" javaType="Wssm">
			<id property="id" column="r_id" />
			<result property="note" column="w_note" />
			<result property="stamp_pic" column="stamp_pic" />
			<result property="special_pic" column="special_pic" />
		</association>
		<collection property="ghf" ofType="Ghf">
			<id property="id" column="g_id" />
			<result property="date" column="g_date" />
			<result property="pic" column="g_pic" />
			<result property="department" column="g_department" />
			<result property="note" column="g_note" />
			<result property="cost" column="g_cost" />
			<result property="self_paid" column="g_self_paid" />
		</collection>
		<collection property="yymx" ofType="Yymx">
			<id property="id" column="y_id" />
			<result property="date" column="y_date" />
			<result property="note" column="y_note" />
			<result property="cost" column="y_cost" />
			<result property="self_paid" column="y_self_paid" />
			<result property="part_paid" column="y_part_paid" />
			<result property="special_paid" column="y_special_paid" />
			<result property="detailed_pic" column="detailed_pic" />
			<result property="pspt_pic" column="pspt_pic" />
		</collection>
	</resultMap>
	<resultMap type="UserInfo" id="userInfo_map">
		<association property="user" javaType="User">
			<id property="id" column="id" />
			<result property="password" column="password" />
			<result property="name" column="name" />
			<result property="idCard" column="id_card" />
			<result property="telephone" column="telephone" />
			<result property="register_date" column="register_time" />
			<result property="gender" column="gender" />
			<result property="type" column="type" />
		</association>
		<association property="department" javaType="Department">
			<id property="id" column="d_id" />
			<result property="name" column="d_name" />
		</association>
	</resultMap>
	
	
	<!-- insert -->
	
	<insert id="insertUndo">
		insert into undo 
		(rb_id, note1, c_time)
		values(#{param1}, '${param2}', sysdate())
	</insert>
	
	<insert id="insertRbOp">
		insert into rb_operation
		values(#{param1}, sysdate(), #{param3}, '${param2}')
	</insert>
	<insert id="insertNewRb">
		insert into rb_detail
		(user_id, rb_state_id, s_time)
		values ('${_parameter}', 1, sysdate())
	</insert>
	<insert id="insertNewReferral" parameterType="Referral">
		insert into referral
		(rb_id, date, pic)
		values (#{rb_id}, #{date}, '${pic}')
	</insert>
	<insert id="insertNewGhf" parameterType="Ghf">
		insert into ghf
		(rb_id, department, date, cost, pic)
		values (#{rb_id}, '${department}', #{date}, #{cost}, '${pic}')
	</insert>
	<insert id="insertNewYymx" parameterType="Yymx">
		insert into yysm
		(rb_id, date, cost, detailed_pic, pspt_pic)
		values (#{rb_id}, #{date}, #{cost}, '${detailed_pic}', '${pspt_pic}')
	</insert>
	<insert id="insertNewWssm" parameterType="Wssm">
		insert into wssm
		(rb_id, note, stamp_pic, special_pic)
		values (#{rb_id}, '${note}','${stamp_pic}', '${special_pic}')
	</insert>
	
<!-- 	select -->
	<select id="getAdminList" resultMap="admin_map">
		select * from admin
	</select>
	<select id="getRbCount" parameterType="RbSearchForm" resultType="int">
		select count(*) from rb_detail, user
		<where>
			user.id = rb_detail.user_id
			<if test="user_name != null">
				and user.name like '%${user_name}%'
			</if>
			<if test="start_date != null">
				and rb_detail.s_time &gt;= #{start_date}
			</if>
			<if test="end_date != null">
				and rb_detail.s_time &lt;= #{end_date}
			</if>
			<if test="rb_state != null">
				and rb_detail.rb_state_id in
				<foreach item="state" collection="rb_state" open="(" separator="," close=")">
					#{state}
				</foreach>
			</if>
			<if test="admin_id != null">
				and rb_detail.admin_id = #{admin_id}
			</if>
			<if test="user_id != null">
				and rb_detail.user_id = #{user_id}
			</if>
			<if test="user_type != null">
				and user_type_id in 
				<foreach item="type" collection="user_type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
		</where>
	</select>
<!-- 	差审核人员字段 -->
	<select id="getRbList" parameterType="RbSearchForm" resultMap="rb_map">
		select rb_detail.id, rb_detail.rb_state_id, rb_detail.admin_id as a_id,
			user.name as u_name, rb_detail.hospital, is_undo
		from rb_detail, user
		<where>
			user.id = rb_detail.user_id
			<if test="user_name != null">
				and user.name like '%${user_name}%'
			</if>
			<if test="start_date != null">
				and rb_detail.s_time &gt;= #{start_date}
			</if>
			<if test="end_date != null">
				and rb_detail.s_time &lt;= #{end_date}
			</if>
			<if test="user_type != null">
				and user_type_id in 
				<foreach item="type" collection="user_type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test="rb_state != null">
				and rb_detail.rb_state_id in
				<foreach item="state" collection="rb_state" open="(" separator="," close=")">
					#{state}
				</foreach>
			</if>
			<if test="admin_id != null">
				and rb_detail.admin_id = #{admin_id}
			</if>
			<if test="user_id != null">
				and rb_detail.user_id = #{user_id}
			</if>
			
		</where>
		order by s_time desc
		limit #{start}, #{length}
	</select>
	<select id="selectLastInsertId" resultType="int">
		select LAST_INSERT_ID()
	</select>
	<select id="getRbById" resultMap="rb_detail_map">
		select rb_detail.id, rb_detail.rb_state_id, rb_detail.admin_id as a_id, is_undo, rb_detail.hospital as hospital,
			ghf.id as g_id, ghf.department as g_department, ghf.date as g_date,
			ghf.cost as g_cost, ghf.note as g_note, ghf.self_paid as g_self_paid,
			ghf.pic as g_pic,
			yymx.id as y_id, yymx.date as y_date, yymx.note as y_note, 
			yymx.cost as y_cost, yymx.self_paid as y_self_paid, yymx.part_paid as y_part_paid,
			yymx.special_paid as y_special_paid, yymx.detailed_pic as detailed_pic,
			yymx.pspt_pic as pspt_pic,
			referral.id as r_id, referral.date as r_date, referral.pic as r_pic,
			wssm.id as w_id, wssm.note as w_note, wssm.stamp_pic as stamp_pic, wssm.special_pic as special_pic,
			user.id as user_id, user.name as u_name
		from (rb_detail, rb_state, user)
			join ghf on (ghf.rb_id = rb_detail.id)
			join yymx on (yymx.rb_id = rb_detail.id)
			join referral on (referral.rb_id = rb_detail.id)
			join wssm on (wssm.rb_id = rb_detail.id)
		where rb_detail.id = #{param1} and rb_detail.user_id = user.id
	</select>
	<select id="getLastRb" resultMap="rb_map">
		select rb_detail.id, rb_detail.rb_state_id
		from rb_detail, user 
		where `user`.id = rb_detail.user_id 
		order by rb_detail.s_time desc 
		limit 1
	</select>
	<select id="getDepartmentCount" resultType="int">
		select count(*) from department
	</select>
	<select id="getUserById" resultMap="user_map">
		select * from department 
		where id = '${param1}' and password = '${param2}' 
	</select>
	<select id="getUerInfoById" resultMap="userInfo_map">
		select 
			department.id as d_id, 
			department.name as d_name, 
			user.* ,user_type.*
		from 
			user, department, user_type
		where 
			user.department_id = department.id and
			user.id = '${_parameter}' and 
			user.user_type_id = user_type.id
	</select>
	<select id="getUserInfo" resultMap="userInfo_map">
		select 
			department.id as d_id, 
			department.name as d_name, 
			user.* ,user_type.*
		from 
			user, department, user_type
		where 
			user.department_id = department.id and
			user.id = '${param1}' and 
			user.password = '${param2}' and 
			user.user_type_id = user_type.id
	</select>
	<select id="getAdminInfo" resultMap="admin_map">
		select admin.id, admin.level from admin
		where id = '${param1}' and password = '${param2}'
	</select>
	<select id="getUndo" resultMap="undo_map">
		select * from undo where rb_id = #{param1}
	</select>
	
	<!-- update -->
	
	<update id="updateUndo" parameterType="system.po.Undo">
		update undo
		set c_time = sysdate()
			<if test="note1 != null">
				, note1 = '${note1}'
			</if>
			<if test="note2 != null">
				, note2 = '${note2}'
			</if>
			<if test="note3 != null">
				, note3 = '${note3}'
			</if>
		where rb_id = #{rb_id}
	</update>
	
	<update id="updateAdmin" parameterType="system.po.Admin">
		update admin 
		set password = '${password}'
		where id = '${id}'
	</update>
	<update id="updateUserTel">
		update user set telephone = '${param2}'
		where id ='${param1}'
	</update>
	<update id="updateUserPsd">
		update user set password = '${param3}'
		where id = '${param1}'
		and password = '${param2}'
	</update>
	<update id="updateRbAdmin" parameterType="system.po.RbDetail">
		update rb_detail 
		set rb_state_id=#{rb_state}
		<if test="admin.id != null">
			, admin_id=#{admin.id}
		</if>
		where id=#{rb_id}
	</update>
	<update id="updateRbCost" parameterType="system.po.RbDetail">
		update rb_detail 
		set total_cost = #{total_cost}, total_self_paid = #{total_self_paid}
		where id = #{rb_id}
	</update>
	<update id="updateRbDetail" parameterType="system.po.RbDetail">
		update rb_detail 
		set rb_state_id=#{rb_state}, hospital='${hospital}', s_time=sysdate()
		where id=#{rb_id}
	</update>
	<update id="updateReferral" parameterType="system.po.Referral">
		update referral 
		set date=#{date}, pic='${pic}'
		where id = #{id}
	</update>	
	<update id="updateGhf" parameterType="system.po.Ghf">
		update ghf
		set g_time = sysdate()
		<if test="department != null">
			, department = '${department}'
		</if>
		<if test="date != null">
			, date = #{date}
		</if>
		<if test="cost != 0">
			, cost = #{cost}
		</if>
		<if test="pic != null">
			, pic = '${pic}'
		</if>
		<if test="self_paid != 0">
			, self_paid = #{self_paid}
		</if>
		<if test="note != null">
			, note = '${note}'
		</if>
		where id = #{id}
	</update>
	<update id="updateYymx" parameterType="system.po.Yymx">
		update yymx
		set y_time = sysdate()
		<if test="date != null">
			, date = #{date} 
		</if> 
		<if test="cost != 0">
			, cost = #{cost}
		</if> 
		<if test="detailed_pic != null">
			, detailed_pic = '${detailed_pic}'
		</if> 
		<if test="pspt_pic != null">
			, pspt_pic = '${pspt_pic}'
		</if>
		<if test="special_paid != 0">
			, special_paid = special_paid
		</if>
		<if test="part_paid != 0">
			, part_paid = part_paid
		</if>
		<if test="self_paid != 0">
			, self_paid = self_paid
		</if>
		<if test="note != null">
			, note = '${note}'
		</if>
		where id = #{id}
	</update>
	<update id="updateWssm" parameterType="system.po.Wssm">
		update wssm
		set note = '${note}', stamp_pic = '${stamp_pic}',
			special_pic = '${special_pic}'
		where id = #{id}
	</update>
	<update id="updateRbState">
		update rb_detail
		set rb_state_id = #{param2}
		where id = #{param1}
	</update>
</mapper>